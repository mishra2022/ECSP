# -*- coding: utf-8 -*-
"""Ecommerce_customer_satisfaction_prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WCp1_dj7Rg37JfiqBj1xSGjIOf9gM3Po

# **Project Name**  - Deep Learning

##### **Project Type**    - Deep Learning

##### **Contribution**    - Individual
##### **Team Member 1 -**Rajesh Kumar Mishra

# **Project Summary -**

The customer satisfaction plays a vital role in the ecommerce industry.In order to enhance the business and know about how much a customer is satisfied with the service of any ecommerce platform it is very import to have a track of the customer reviews.
This proect is based on customer satisfaction of a ecommerce company.In this a dataset there are 85907 rows and 20 columns.We have performed EDA in order to get insights that can benefit the organisation.After this we have performed the basic oprations like filling the missing values ,removing the duplicate values if any.The next step was to drop the unnecessary columns from our dataset followed by one hot encoding on the remaining columns and then performed the train test split on the dataset and then we applied the ANN model and derivedd the necessary insights from it.

# **GitHub Link -** https://github.com/mishra2022/ECSP

# **Problem Statement**

The primary goal of this project is to develop a deep learning model that can accurately predict the CSAT scores based on customer interactions and feedback. By doing so, we aim to provide e-commerce businesses with a powerful tool to monitor and enhance customer satisfaction in real-time, thereby improving service quality and fostering customer loyalty

# ***Let's Begin !***
"""

from google.colab import drive
drive.mount('/content/drive')

"""## ***1. Know Your Data***

### Import Libraries
"""

# Commented out IPython magic to ensure Python compatibility.
# Import Libraries
import pandas as pd
import numpy as np
from matplotlib import  pyplot as plt
import seaborn as sns
# %matplotlib inline

"""### Dataset Loading"""

# Load Dataset
df=pd.read_csv('/content/drive/MyDrive/CSAT_Score_Prediction_MS_Module4/eCommerce_Customer_support_data.csv')

"""### Dataset First View"""

# Dataset First Look
df.sample(5)

"""### Dataset Rows & Columns count"""

# Dataset Rows & Columns count
df.shape

"""### Dataset Information"""

# Dataset Info
df.info()

"""#### Duplicate Values"""

# Dataset Duplicate Value Count
df.duplicated().sum()

"""#### Missing Values/Null Values"""

# Missing Values/Null Values Count
df.isna().sum()

# Visualizing the missing values
plt.figure(figsize=(15,5))
sns.heatmap(df.isnull(),cmap='magma',annot=False,yticklabels=False)
plt.title(" Visualising Missing Values")

"""### What did you know about your dataset?

There are 85907 rows and 20 columns .

## ***2. Understanding Your Variables***
"""

# Dataset Columns
list(df)

# Dataset Describe
df.describe(include='all')

"""### Check Unique Values for each variable."""

# Check Unique Values for each variable.
# for column in df:
#   print(df[column].unique())

"""## 3. ***Data Wrangling***

### Data Wrangling Code
"""

numerical_columns=[]
for col in df.columns:
  if df[col].nunique()>5:
    numerical_columns.append(col)
categorical_columns=list(set(df.columns)-set(numerical_columns))

print(numerical_columns)

print(categorical_columns)

# Write your code to make your dataset analysis ready.

"""## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***

#### Chart - 1
"""

# Chart - 1 visualization code
import plotly.express as px
template="plotly_dark"
csat_graph = px.histogram(df, x='CSAT Score', title='Distribution of CSAT Scores',
                                     labels={'CSAT Score': 'CSAT Score'},
                                     color='CSAT Score',template=template)
csat_graph.update_layout(
    xaxis=dict(title='CSAT Score', tickmode='linear'),
    yaxis=dict(title='Count'),
    font=dict(family='Arial', size=12, color='white')
)

# Show interactive graph
csat_graph.show()

"""##### 1. Why did you pick the specific chart?

This chart will tell us that how many people have rated for a particular CSAT score.Like how many customers have given a rating of 5 to the organisation.

##### 2. What is/are the insight(s) found from the chart?

The insight that we get from the chart is that maximum customers in the dataset have given a rating of 5 to the organisation that means the customers are happy with the services of the organisations.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Answer HereYes it will definately help in creating a positive business impact .Lower rating can lead to negative growth as it will make a perception in the society that the services offered by the organisations are not upto the mark and customers are highly dissatisfied with it.

#### Chart - 2
"""

# Chart - 2 visualization code
top_agents_csat_bar_fig = px.bar(df.groupby('Agent_name')['CSAT Score'].mean().reset_index().nlargest(10, 'CSAT Score'),
                                  x='Agent_name', y='CSAT Score', title='Top Agents by CSAT Score',
                                  labels={'Agent_name': 'Agent Name', 'CSAT Score': 'Average CSAT Score'},
                                  color='CSAT Score',template=template)
top_agents_csat_bar_fig.update_layout(font=dict(family='Arial', size=12, color='white'))

# Show interactive graph
top_agents_csat_bar_fig.show()

"""##### 1. Why did you pick the specific chart?

This chart will give the information about the custommer service agents and the CSAT score they have received.

##### 2. What is/are the insight(s) found from the chart?

The insight that we will get is the customer service agents and the CSAT score that they have received.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes it will help in creating positive business impact.

#### Chart - 3
"""

# Chart - 3 visualization code
top_manager_csat_bar_fig = px.bar(df.groupby('Manager')['CSAT Score'].mean().reset_index().nlargest(10, 'CSAT Score'),
                                  x='Manager', y='CSAT Score', title='Top Managers by CSAT Score',
                                  labels={'Manager': 'Manager Name', 'CSAT Score': 'Average CSAT Score'},
                                  color='CSAT Score', template=template)
top_manager_csat_bar_fig.update_layout(font=dict(family='Arial', size=12, color='white'))

# Show interactive graph
top_manager_csat_bar_fig.show()

"""##### 1. Why did you pick the specific chart?

This chart will give information about the managers and the CSAT score they the received from the customers.

##### 2. What is/are the insight(s) found from the chart?

This chart gives the insight that under which manager's leadership skill the CSAT score is the highest and in future his/her managerial skills can be used for enhancing the business.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes it will help in creating positive impact on business.
A manager will lower CSAT score can lead to loss in any organisation ,so he/she has to brushup the skills in order to create a positive impact on customers.

#### Chart - 4
"""

# Chart - 4 visualization code
best_tenure_csat_bar_fig = px.bar(df.groupby('Tenure Bucket')['CSAT Score'].mean().reset_index().nlargest(10, 'CSAT Score'),
                                  x='Tenure Bucket', y='CSAT Score', title='Best Tenure by CSAT Score',
                                  labels={'Tenure Bucket': 'Tenure Duration', 'CSAT Score': 'Average CSAT Score'},
                                  color='CSAT Score', template=template)
best_tenure_csat_bar_fig.update_layout(font=dict(family='Arial', size=12, color='white'))

# Show interactive graph
best_tenure_csat_bar_fig.show()

"""##### 1. Why did you pick the specific chart?

This chart will give imformation about the tenure of the agents.

##### 2. What is/are the insight(s) found from the chart?

It gives the information about the tenure of the agents.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes it will help in creating positive impact on business.

#### Chart - 5
"""

# Chart - 5 visualization code
best_channel_csat_bar_fig = px.bar(df.groupby('channel_name')['CSAT Score'].mean().reset_index().nlargest(10, 'CSAT Score'),
                                  x='channel_name', y='CSAT Score', title='Best channel by CSAT Score',
                                  labels={'channel_name': 'Channel name', 'CSAT Score': 'Average CSAT Score'},
                                  color='CSAT Score', template=template)
best_tenure_csat_bar_fig.update_layout(font=dict(family='Arial', size=12, color='white'))

# Show interactive graph
best_channel_csat_bar_fig.show()

"""##### 1. Why did you pick the specific chart?

This chart is created to get information about various channels and the CSAT  score under each channel.

##### 2. What is/are the insight(s) found from the chart?

THe insight that we get from this is the channel through which the Highest CSAT score is received.

##### 3. Will the gained insights help creating a positive business impact?
Are there any insights that lead to negative growth? Justify with specific reason.

Yes it will help in creating a positive business impact.

#### Chart - 14 - Correlation Heatmap
"""

import matplotlib.pyplot as mp
import pandas as pd
import seaborn as sb

# Correlation Heatmap visualization code
# Handle non-numerical columns before calculating correlation
# Drop non-numerical columns
df_numeric = df.select_dtypes(include=['number'])

# Or, if you want to keep the non-numerical columns, fill them with a placeholder value
# df_filled = df.fillna(0) # Replace NaN with 0, adjust as needed

# Correlation Heatmap visualization code
dataplot = sb.heatmap(df_numeric.corr(), cmap="YlGnBu", annot=True) # Use the modified DataFrame

# displaying heatmap
mp.show()

"""#### Chart - 15 - Pair Plot"""

# Pair Plot visualization code
sns.pairplot(df, hue="CSAT Score")

"""## ***6. Feature Engineering & Data Pre-processing***

### 1. Handling Missing Values
"""

# Handling Missing Values & Missing Value Imputation
df.isna().sum()

df_new = df.drop(["Customer Remarks", "Order_id", "order_date_time","Agent Shift","channel_name"], axis=1)

df_new["Item_price"].fillna(df_new["Item_price"].median(), inplace=True)
df_new["connected_handling_time"].fillna(df_new["connected_handling_time"].median(), inplace=True)

df_new["Customer_City"].fillna("Unknown", inplace=True)
df_new["Product_category"].fillna("Unknown", inplace=True)

timestamp_columns = ["Issue_reported at", "issue_responded", "Survey_response_Date"]
for column in timestamp_columns:
    df_new[column] = pd.to_datetime(df_new[column], errors='coerce')

for column in ["Issue_reported at", "issue_responded"]:
    df_new[column].fillna(df_new[column].median(), inplace=True)

df_new.isna().sum()

df_new.info()

"""### 3. Categorical Encoding"""

# Encode your categorical columns

df_new=df_new.drop(['Unique id','category','Sub-category','Issue_reported at','issue_responded','Survey_response_Date','Customer_City','Product_category','Item_price',
'Agent_name','Supervisor'],axis=1)

df_new.info()

one_hot=pd.get_dummies(df['Manager'] ,dtype=int)

one_hot.head()

df_new1=df_new.drop('Manager',axis=1)

df_new1=df_new1.join(one_hot)

df_new1

one_hot1=pd.get_dummies(df_new1['Tenure Bucket'] ,dtype=int)

one_hot1

df_new2=df_new1.drop('Tenure Bucket',axis=1)

df_new2=df_new2.join(one_hot1)

df_new2

"""### 8. Data Splitting"""

# Split your data to train and test. Choose Splitting ratio wisely.

from sklearn.model_selection import train_test_split

features = ['CSAT Score','Jennifer Nguyen','John Smith','Michael Lee','Olivia Tan','William Kim','connected_handling_time','0-30','31-60','61-90','>90','On Job Training']
X = df_new2.loc[:, features]
y = df_new2.loc[:, ['Emily Chen']]

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=0, train_size = .75)

X_train

"""## ***7. ML Model Implementation***

### ML Model - 1
"""

# ML Model - 1 Implementation
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import Sequential

# Fit the Algorithm

# Predict on the model

model=keras.Sequential([
      keras.layers.Dense(30,activation='tanh'),
      keras.layers.Dense(30,activation='tanh'),

      # keras.layers.Dense(15,activation='tanh'),

      keras.layers.Dense(1,activation='relu')
])

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])
model.fit(X_train,y_train,epochs=25)

model.summary()

"""## ***8.*** ***Future Work (Optional)***

### 1. Save the best performing ml model in a pickle file or joblib file format for deployment process.
"""

# Save the File

import pickle

# Save the model to a file
with open('trained_model.pkl', 'wb') as file:
    pickle.dump(model, file)

"""### 2. Again Load the saved model file and try to predict unseen data for a sanity check.

"""

# Load the File and predict unseen data.

# Load the model from the file
with open('trained_model.pkl', 'rb') as file:
    loaded_model = pickle.load(file)

# Use the loaded model to make predictions
predictions = loaded_model.predict(X_test)

"""# **Conclusion**

The accuracy of our model is coming out to be approx 83% ,so we can say that out model performed well on the data that we have selected and it will definitley help in getting the meaningful insights that can help the ecommerce company to grow.

### ***Hurrah! You have successfully completed your Machine Learning Capstone Project !!!***
"""